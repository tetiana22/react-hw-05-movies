{"version":3,"file":"static/js/196.cbc4fc90.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/Loader/Loader.jsx","components/MovieDetails /MovieDetails.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieDetails /MovieDetails .jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '49f38d7c71c1f723c765b666aee6477b';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n","import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n      }}\n    >\n      <Audio\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"green\"\n        ariaLabel=\"loading\"\n        wrapperStyle\n        wrapperClass\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  list-style: none;\n  padding-left: 20px;\n  font-weight: 600;\n  font-size: 18px;\n  color: #fff;\n\n  &:hover {\n    color: #1c85ff;\n  }\n`;\n\nexport const SectionDetails = styled.section`\n  padding-right: 50px;\n  padding-left: 90px;\n  margin-top: 10px;\n`;\n\nexport const SectionTitleDetails = styled.h2`\n  margin-top: 100px;\n  font-size: 25px;\n  font-weight: 600;\n  text-align: center;\n  color: #1c85ff;\n  padding-top: 20px;\n  padding-left: 50px;\n`;\nexport const SectionInfo = styled.div`\n  box-shadow: 0px 4px 4px #d3d3d3;\n  background-color: #0d253f;\n  list-style: none;\n  padding-bottom: 20px;\n`;\nexport const Li = styled.ul`\n  list-style: none;\n`;\n\nexport const Button = styled.button`\n  border: 2px solid #0d253f;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n  background: linear-gradient(#01b4e4, #90cea1);\n\n  -webkit-animation: AnimationName 44s ease infinite;\n  -moz-animation: AnimationName 44s ease infinite;\n  animation: AnimationName 44s ease infinite;\n  &:hover,\n  &:focus {\n    color: #ffffff;\n  }\n`;\nexport const ListDetails = styled.li`\n  text-align: center;\n  padding-bottom: 15px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-top: 20px;\n  max-width: 1100px;\n`;\n\nexport const MovieName = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoText = styled.p`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const MovieInfoTextBold = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const MoreInfoWrapper = styled.div`\n  margin-top: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-top: 1px solid #d3d3d3;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const MoreInfoHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  gap: 20px;\n  font-size: 18px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 16px;\n  margin-right: 5px;\n  padding: 5px 15px;\n  border: 1px solid #0d57aa;\n  border-radius: 6px;\n  background-color: #b5d1f2;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  color: #0d57aa;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import {\n  MovieCardContainer,\n  MovieInfo,\n  MovieInfoText,\n  MovieInfoTextBold,\n  MovieName,\n} from './MovieCard.styled';\nconst MovieCard = ({ movie }) => {\n  const { title, overview, genres, poster_path, vote_average, release_date } =\n    movie;\n\n  const releaseDate = new Date(release_date);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path} `\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n  return (\n    <>\n      <MovieCardContainer>\n        <img src={posterUrl} alt={`${title} poster`} />\n\n        <MovieInfo>\n          <MovieName>\n            {title ?? 'Unknown'} ({releaseYear})\n          </MovieName>\n          <MovieInfoText>User Score: {userScore}</MovieInfoText>\n          <MovieInfoText>\n            <MovieInfoTextBold>Overview:</MovieInfoTextBold> {overview}\n          </MovieInfoText>\n\n          {/* додаємо перевірку на наявність жанрів */}\n          {genres && genres.length > 0 && (\n            <MovieInfoText>\n              <MovieInfoTextBold>Genres:</MovieInfoTextBold>\n              {genres.map(genre => genre.name).join(', ')}\n            </MovieInfoText>\n          )}\n        </MovieInfo>\n      </MovieCardContainer>\n    </>\n  );\n};\n\nexport default MovieCard;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'components/Api/Api';\nimport {\n  Button,\n  SectionInfo,\n  LinkInfo,\n  Li,\n  ListDetails,\n  SectionTitleDetails,\n  SectionDetails,\n} from './MovieDetails.styled';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectMovie, setSelectMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setSelectMovie(movie);\n        setLoading(true);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <SectionDetails>\n        <Link to={location.state?.from ?? '/'}>\n          <Button type=\"button\">Go back</Button>\n        </Link>\n        <MovieCard movie={selectMovie} />\n      </SectionDetails>\n      <SectionInfo>\n        <SectionTitleDetails>Additional information</SectionTitleDetails>\n        <ListDetails>\n          <Li>\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\n          </Li>\n          <Li>\n            <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n          </Li>\n        </ListDetails>\n        <Outlet />\n      </SectionInfo>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","concat","sent","abrupt","results","stop","apply","arguments","fetchMovieByName","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","_jsx","style","display","justifyContent","alignItems","height","children","Audio","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","LinkInfo","styled","_templateObject","_taggedTemplateLiteral","Link","_templateObject2","SectionDetails","_templateObject3","SectionTitleDetails","_templateObject4","SectionInfo","_templateObject5","Li","_templateObject6","Button","_templateObject7","ListDetails","_templateObject8","MovieCardContainer","MovieInfo","MovieName","MovieInfoText","MovieInfoTextBold","_templateObject9","_templateObject10","movie","title","overview","genres","poster_path","vote_average","release_date","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","_Fragment","_jsxs","src","alt","length","map","genre","name","join","_location$state$from","_location$state","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","selectMovie","setSelectMovie","_useState3","_useState4","loading","setLoading","useEffect","fetchData","t0","console","log","finish","Loader","to","state","from","type","MovieCard","Outlet"],"sourceRoot":""}